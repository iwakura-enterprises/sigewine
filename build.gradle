plugins {
    id 'java'
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id 'jacoco'
    id 'jacoco-report-aggregation'

    id "tech.medivh.plugin.publisher" version "1.2.3"
}

group = 'enterprises.iwakura'
version = '1.3.0'

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    // https://mvnrepository.com/artifact/org.reflections/reflections/0.10.2
    implementation 'org.reflections:reflections:0.10.2'
    testImplementation 'org.reflections:reflections:0.10.2'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api/2.0.17
    implementation 'org.slf4j:slf4j-api:2.0.17'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
    testCompileOnly 'org.projectlombok:lombok:1.18.38'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.38'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    testImplementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.23.1'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.23.1'
}

// == Quick tasks == //

task publishCloseAndRelease() {
    dependsOn 'cleanBuildMedivhMavenRepo'
    dependsOn 'uploadToSonatype'
    dependsOn 'publishDeployment'
}

shadowJar {
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        csv.required.set(true)
    }
}

// UTF-8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// == Maven publishing == //

publishing {

    publications {
        shadow(MavenPublication) {
            groupId = 'enterprises.iwakura'
            artifactId = 'sigewine'
            version = getVersion()
            from components.java

            pom {
                name = 'Sigewine'
                description = 'Simple & lightweight runtime dependency injection library for Java'
                url = 'https://github.com/iwakura-enterprises/sigewine'

                scm {
                    connection = 'scm:https://github.com/iwakura-enterprises/sigewine'
                    developerConnection = 'scm:git:https://github.com/iwakura-enterprises/sigewine.git'
                    url = 'https://github.com/iwakura-enterprises/sigewine'
                }

                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/license/mit'
                    }
                }

                developers {
                    developer {
                        id = 'mayuna'
                        name = 'Marek Lof'
                        email = 'uwulilmayu@gmail.com'
                    }
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
            System.getenv("GPG_KEY_ID"),
            System.getenv("GPG_PRIVATE_KEY"),
            System.getenv("GPG_PASSWORD")
    )
}

java {
    withJavadocJar()
    withSourcesJar()
}

shadowJar.dependsOn javadocJar
shadowJar.dependsOn sourcesJar
shadowJar.dependsOn jar

components.java.withVariantsFromConfiguration(configurations.shadowRuntimeElements) {
    skip()
}
